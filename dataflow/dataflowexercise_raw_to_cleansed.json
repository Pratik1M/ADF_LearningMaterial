{
	"name": "dataflowexercise_raw_to_cleansed",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "OrdersSource_ds",
						"type": "DatasetReference"
					},
					"name": "Orderssource"
				},
				{
					"dataset": {
						"referenceName": "OrderitemsSource_ds",
						"type": "DatasetReference"
					},
					"name": "orderitemssource"
				},
				{
					"dataset": {
						"referenceName": "Storessource_ds",
						"type": "DatasetReference"
					},
					"name": "Storessource"
				},
				{
					"dataset": {
						"referenceName": "Productssource_ds",
						"type": "DatasetReference"
					},
					"name": "Productssource"
				},
				{
					"dataset": {
						"referenceName": "CustomerFileds",
						"type": "DatasetReference"
					},
					"name": "Customerssource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_cleansed_orders",
						"type": "DatasetReference"
					},
					"name": "Orderssink"
				},
				{
					"dataset": {
						"referenceName": "ds_orderitems_to_cleansed",
						"type": "DatasetReference"
					},
					"name": "OrderItemssink"
				},
				{
					"dataset": {
						"referenceName": "ds_cleansed_Stores",
						"type": "DatasetReference"
					},
					"name": "Storessink"
				},
				{
					"dataset": {
						"referenceName": "ds_cleansed_Products",
						"type": "DatasetReference"
					},
					"name": "productssink"
				},
				{
					"dataset": {
						"referenceName": "ds_cleansed_Customers",
						"type": "DatasetReference"
					},
					"name": "Customerssink"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1",
					"description": "Creating/updating the columns 'ORDER_ID, ORDER_DATETIME, CUSTOMER_ID, ORDER_STATUS, STORE_ID'"
				},
				{
					"name": "cast1"
				},
				{
					"name": "select1"
				},
				{
					"name": "cast2"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "select2"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "select3"
				},
				{
					"name": "derivedColumn4"
				},
				{
					"name": "derivedColumn5"
				},
				{
					"name": "select4"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ORDER_ID as string,",
				"          ORDER_DATETIME as string,",
				"          CUSTOMER_ID as string,",
				"          ORDER_STATUS as string,",
				"          STORE_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> Orderssource",
				"source(output(",
				"          ORDER_ID as string,",
				"          LINE_ITEM_ID as string,",
				"          PRODUCT_ID as string,",
				"          UNIT_PRICE as string,",
				"          QUANTITY as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> orderitemssource",
				"source(output(",
				"          LATITUDE as double,",
				"          LONGITUDE as double,",
				"          STORE_ID as short,",
				"          STORE_NAME as string,",
				"          WEB_ADDRESS as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> Storessource",
				"source(output(",
				"          PRODUCT_ID as short,",
				"          PRODUCT_NAME as string,",
				"          UNIT_PRICE as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> Productssource",
				"source(output(",
				"          CUSTOMER_ID as short,",
				"          EMAIL_ADDRESS as string,",
				"          FULL_NAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> Customerssource",
				"Orderssource derive(OrderDate = toDate(ORDER_DATETIME, 'dd-MMM-yy hh.mm.ss.SS'),",
				"          Current_dateTime = currentUTC()) ~> derivedColumn1",
				"derivedColumn1 cast(output(",
				"          ORDER_ID as integer,",
				"          CUSTOMER_ID as integer,",
				"          STORE_ID as integer",
				"     ),",
				"     errors: true) ~> cast1",
				"cast1 select(mapColumn(",
				"          ORDER_ID,",
				"          ORDER_DATE = OrderDate,",
				"          CUSTOMER_ID,",
				"          ORDER_STATUS,",
				"          STORE_ID,",
				"          UPDATED_TIMESTAMP = Current_dateTime",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"orderitemssource cast(output(",
				"          ORDER_ID as integer,",
				"          PRODUCT_ID as integer,",
				"          UNIT_PRICE as double,",
				"          QUANTITY as integer",
				"     ),",
				"     errors: true) ~> cast2",
				"cast2 derive(UPDATED_TIMESTAMP = currentUTC()) ~> derivedColumn2",
				"derivedColumn2 select(mapColumn(",
				"          ORDER_ID,",
				"          PRODUCT_ID,",
				"          UNIT_PRICE,",
				"          QUANTITY,",
				"          UPDATED_TIMESTAMP",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"Storessource derive(UPDATED_TIMESTAMP = currentUTC()) ~> derivedColumn3",
				"derivedColumn3 select(mapColumn(",
				"          STORE_ID,",
				"          STORE_NAME,",
				"          LATITUDE,",
				"          LONGITUDE,",
				"          UPDATED_TIMESTAMP",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"Productssource derive(UPDATED_TIMESTAMP = currentUTC()) ~> derivedColumn4",
				"Customerssource derive(UPDATED_TIMESTAMP = currentUTC()) ~> derivedColumn5",
				"derivedColumn5 select(mapColumn(",
				"          CUSTOMER_ID,",
				"          FULL_NAME,",
				"          EMAIL_ADDRESS,",
				"          UPDATED_TIMESTAMP",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Orderssink",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> OrderItemssink",
				"select3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Storessink",
				"derivedColumn4 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> productssink",
				"select4 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Customerssink"
			]
		}
	}
}